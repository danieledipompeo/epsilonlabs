@_sysParam checkCollectionArgSingle
operation Collection add(item: Any) : SelfType {} //done ---------------------------

@_sysParam checkCollectionArgCollection
operation Collection addAll(col: Collection) : SelfType {} //done ---------------------------

@_sysParam checkCollectionArgSingle
operation Collection remove(item: Any) : SelfType {} //done ---------------------------

@_sysParam checkCollectionArgCollection
operation Collection removeAll(col: Collection) : SelfType{} //done ---------------------------

operation Collection clear() : SelfType{} //done ---------------------------

operation Collection includes(item: Any) : Boolean{} //done ---------------------------

operation Collection excludes(item: Any) : Boolean{} //done ---------------------------

operation Collection includesAll(col: Collection) : Boolean{} //done ---------------------------

operation Collection excludesAll(col: Collection) : Boolean{} //done ---------------------------

@_sysParam checkCollectionArgSingle
operation Collection including(item: Any) : SelfType{} //done ---------------------------

@_sysParam checkCollectionArgSingle
operation Collection excluding(item: Any) : SelfType{} //done ---------------------------

@_sysParam checkCollectionArgCollection
operation Collection includingAll(col: Collection) : SelfType{} //done ---------------------------

@_sysParam checkCollectionArgCollection
operation Collection excludingAll(col: Collection) : SelfType{} //done ---------------------------

@_sysParam returnInnermostType
operation Collection flatten() : Sequence {} //done ---------------------------

operation Collection count(item: Any) : Integer {} //done ---------------------------

operation Collection size() : Integer {} //simple ---------------------------

operation Collection isEmpty() : Boolean {} //simple ---------------------------

operation Collection random() : SelfContentType {} //done ---------------------------

operation Collection clone() : SelfType {} //done ---------------------------

operation Collection concat() : String {} //simple ---------------------------

operation Collection concat(separator: String) : String {} //done ---------------------------

-- operations for Sequence and OrderedSet types

operation Sequence first() : SelfContentType {} //done ---------------------------

operation OrderedSet first() : SelfContentType {} //done ---------------------------

operation Sequence last() : SelfContentType {} //done ---------------------------

operation OrderedSet last() : SelfContentType {} //done ---------------------------

operation Sequence at(index: Integer) : SelfContentType {} // ---------------------------

@_sysParam checkNonNegArg
operation OrderedSet at(index: Integer) : SelfContentType {} // ---------------------------

@_sysParam checkNonNegArg
operation Sequence removeAt(index: Integer) : SelfContentType {} // ---------------------------

@_sysParam checkNonNegArg
operation OrderedSet removeAt(index : Integer) : SelfContentType {} // ---------------------------

operation Sequence indexOf(item: Any) : Integer {} //done Does this return -1? ==========================================

operation OrderedSet indexOf(item: Any) : Integer {} //done ==========================================

operation Sequence invert() : SelfType {} //done ---------------------------

operation OrderedSet invert() : SelfType {} //done ---------------------------

-- First-order logic operations - cannot be described using EOL 
@_sysParam iteratorOp
operation Collection select(iterator: Any) : SelfType {} //context
@_sysParam iteratorOp
operation Collection selectOne(iterator: Any) : SelfContentType {}
@_sysParam iteratorOp
operation Collection reject(iterator: Any) : SelfType {}
@_sysParam iteratorOp, returnContentIsArgType
operation Collection collect(expression: Any) : SelfType {}
@_sysParam iteratorOp
operation Collection closure(iterator: Any) : SelfType {}
@_sysParam iteratorOp
operation Collection aggregate(iterator: Any) : Map {}
@_sysParam iteratorOp
operation Collection one(iterator: Any) : Boolean {}
@_sysParam iteratorOp
operation Collection exists(iterator: Any) : Boolean {}
@_sysParam iteratorOp
operation Collection forAll(iterator: Any) : Boolean {}
@_sysParam iteratorOp
operation Collection sortBy(iterator: Any) : SelfType {}

-- operations of type Map

operation Map put(key: Any, value: Any) {}

operation Map get(key: Any) : Any {}

operation Map containsKey(key: Any) : Boolean {}

operation Map keySet(): Set {}
